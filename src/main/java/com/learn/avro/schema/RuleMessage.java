/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.learn.avro.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RuleMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3512289990515011873L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RuleMessage\",\"namespace\":\"com.learn.avro.schema\",\"fields\":[{\"name\":\"station\",\"type\":\"string\",\"default\":\"false\"},{\"name\":\"model\",\"type\":\"string\",\"default\":\"false\"},{\"name\":\"io\",\"type\":\"string\",\"default\":\"false\"},{\"name\":\"timestamp\",\"type\":\"string\",\"default\":\"false\"},{\"name\":\"value\",\"type\":\"string\",\"default\":\"false\"},{\"name\":\"connection\",\"type\":\"string\",\"default\":\"false\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RuleMessage> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RuleMessage> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RuleMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RuleMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RuleMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RuleMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RuleMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RuleMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RuleMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence station;
  private java.lang.CharSequence model;
  private java.lang.CharSequence io;
  private java.lang.CharSequence timestamp;
  private java.lang.CharSequence value;
  private java.lang.CharSequence connection;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RuleMessage() {}

  /**
   * All-args constructor.
   * @param station The new value for station
   * @param model The new value for model
   * @param io The new value for io
   * @param timestamp The new value for timestamp
   * @param value The new value for value
   * @param connection The new value for connection
   */
  public RuleMessage(java.lang.CharSequence station, java.lang.CharSequence model, java.lang.CharSequence io, java.lang.CharSequence timestamp, java.lang.CharSequence value, java.lang.CharSequence connection) {
    this.station = station;
    this.model = model;
    this.io = io;
    this.timestamp = timestamp;
    this.value = value;
    this.connection = connection;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return station;
    case 1: return model;
    case 2: return io;
    case 3: return timestamp;
    case 4: return value;
    case 5: return connection;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: station = (java.lang.CharSequence)value$; break;
    case 1: model = (java.lang.CharSequence)value$; break;
    case 2: io = (java.lang.CharSequence)value$; break;
    case 3: timestamp = (java.lang.CharSequence)value$; break;
    case 4: value = (java.lang.CharSequence)value$; break;
    case 5: connection = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'station' field.
   * @return The value of the 'station' field.
   */
  public java.lang.CharSequence getStation() {
    return station;
  }


  /**
   * Sets the value of the 'station' field.
   * @param value the value to set.
   */
  public void setStation(java.lang.CharSequence value) {
    this.station = value;
  }

  /**
   * Gets the value of the 'model' field.
   * @return The value of the 'model' field.
   */
  public java.lang.CharSequence getModel() {
    return model;
  }


  /**
   * Sets the value of the 'model' field.
   * @param value the value to set.
   */
  public void setModel(java.lang.CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'io' field.
   * @return The value of the 'io' field.
   */
  public java.lang.CharSequence getIo() {
    return io;
  }


  /**
   * Sets the value of the 'io' field.
   * @param value the value to set.
   */
  public void setIo(java.lang.CharSequence value) {
    this.io = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.CharSequence getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.CharSequence value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'connection' field.
   * @return The value of the 'connection' field.
   */
  public java.lang.CharSequence getConnection() {
    return connection;
  }


  /**
   * Sets the value of the 'connection' field.
   * @param value the value to set.
   */
  public void setConnection(java.lang.CharSequence value) {
    this.connection = value;
  }

  /**
   * Creates a new RuleMessage RecordBuilder.
   * @return A new RuleMessage RecordBuilder
   */
  public static com.learn.avro.schema.RuleMessage.Builder newBuilder() {
    return new com.learn.avro.schema.RuleMessage.Builder();
  }

  /**
   * Creates a new RuleMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RuleMessage RecordBuilder
   */
  public static com.learn.avro.schema.RuleMessage.Builder newBuilder(com.learn.avro.schema.RuleMessage.Builder other) {
    if (other == null) {
      return new com.learn.avro.schema.RuleMessage.Builder();
    } else {
      return new com.learn.avro.schema.RuleMessage.Builder(other);
    }
  }

  /**
   * Creates a new RuleMessage RecordBuilder by copying an existing RuleMessage instance.
   * @param other The existing instance to copy.
   * @return A new RuleMessage RecordBuilder
   */
  public static com.learn.avro.schema.RuleMessage.Builder newBuilder(com.learn.avro.schema.RuleMessage other) {
    if (other == null) {
      return new com.learn.avro.schema.RuleMessage.Builder();
    } else {
      return new com.learn.avro.schema.RuleMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for RuleMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RuleMessage>
    implements org.apache.avro.data.RecordBuilder<RuleMessage> {

    private java.lang.CharSequence station;
    private java.lang.CharSequence model;
    private java.lang.CharSequence io;
    private java.lang.CharSequence timestamp;
    private java.lang.CharSequence value;
    private java.lang.CharSequence connection;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.learn.avro.schema.RuleMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.station)) {
        this.station = data().deepCopy(fields()[0].schema(), other.station);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.model)) {
        this.model = data().deepCopy(fields()[1].schema(), other.model);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.io)) {
        this.io = data().deepCopy(fields()[2].schema(), other.io);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.connection)) {
        this.connection = data().deepCopy(fields()[5].schema(), other.connection);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing RuleMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.learn.avro.schema.RuleMessage other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.station)) {
        this.station = data().deepCopy(fields()[0].schema(), other.station);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.model)) {
        this.model = data().deepCopy(fields()[1].schema(), other.model);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.io)) {
        this.io = data().deepCopy(fields()[2].schema(), other.io);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.connection)) {
        this.connection = data().deepCopy(fields()[5].schema(), other.connection);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'station' field.
      * @return The value.
      */
    public java.lang.CharSequence getStation() {
      return station;
    }


    /**
      * Sets the value of the 'station' field.
      * @param value The value of 'station'.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder setStation(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.station = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'station' field has been set.
      * @return True if the 'station' field has been set, false otherwise.
      */
    public boolean hasStation() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'station' field.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder clearStation() {
      station = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'model' field.
      * @return The value.
      */
    public java.lang.CharSequence getModel() {
      return model;
    }


    /**
      * Sets the value of the 'model' field.
      * @param value The value of 'model'.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder setModel(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.model = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'model' field.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder clearModel() {
      model = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'io' field.
      * @return The value.
      */
    public java.lang.CharSequence getIo() {
      return io;
    }


    /**
      * Sets the value of the 'io' field.
      * @param value The value of 'io'.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder setIo(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.io = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'io' field has been set.
      * @return True if the 'io' field has been set, false otherwise.
      */
    public boolean hasIo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'io' field.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder clearIo() {
      io = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.CharSequence getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder setValue(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder clearValue() {
      value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'connection' field.
      * @return The value.
      */
    public java.lang.CharSequence getConnection() {
      return connection;
    }


    /**
      * Sets the value of the 'connection' field.
      * @param value The value of 'connection'.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder setConnection(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.connection = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'connection' field has been set.
      * @return True if the 'connection' field has been set, false otherwise.
      */
    public boolean hasConnection() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'connection' field.
      * @return This builder.
      */
    public com.learn.avro.schema.RuleMessage.Builder clearConnection() {
      connection = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RuleMessage build() {
      try {
        RuleMessage record = new RuleMessage();
        record.station = fieldSetFlags()[0] ? this.station : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.model = fieldSetFlags()[1] ? this.model : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.io = fieldSetFlags()[2] ? this.io : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.timestamp = fieldSetFlags()[3] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.connection = fieldSetFlags()[5] ? this.connection : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RuleMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<RuleMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RuleMessage>
    READER$ = (org.apache.avro.io.DatumReader<RuleMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.station);

    out.writeString(this.model);

    out.writeString(this.io);

    out.writeString(this.timestamp);

    out.writeString(this.value);

    out.writeString(this.connection);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.station = in.readString(this.station instanceof Utf8 ? (Utf8)this.station : null);

      this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);

      this.io = in.readString(this.io instanceof Utf8 ? (Utf8)this.io : null);

      this.timestamp = in.readString(this.timestamp instanceof Utf8 ? (Utf8)this.timestamp : null);

      this.value = in.readString(this.value instanceof Utf8 ? (Utf8)this.value : null);

      this.connection = in.readString(this.connection instanceof Utf8 ? (Utf8)this.connection : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.station = in.readString(this.station instanceof Utf8 ? (Utf8)this.station : null);
          break;

        case 1:
          this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);
          break;

        case 2:
          this.io = in.readString(this.io instanceof Utf8 ? (Utf8)this.io : null);
          break;

        case 3:
          this.timestamp = in.readString(this.timestamp instanceof Utf8 ? (Utf8)this.timestamp : null);
          break;

        case 4:
          this.value = in.readString(this.value instanceof Utf8 ? (Utf8)this.value : null);
          break;

        case 5:
          this.connection = in.readString(this.connection instanceof Utf8 ? (Utf8)this.connection : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










